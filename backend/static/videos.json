{"videos": [{"title": "Python in 100 Seconds", "url": "https://www.youtube.com/watch?v=x7X9w_GIm1s", "transcript": " Python, a high-level, interpreted programming language famous for its zen-like code. It's arguably the most popular language in the world because it's easy to learn, yet practical for serious projects. In fact, you're watching this YouTube video in a Python web application right now. It was created by Kwiidovan Rossum and released in 1991, who named it after Monty Python's blind circus, which is why you'll sometimes find spam and eggs instead of food and bar in code samples. It's commonly used to build server-side applications, like web apps with the Django framework, and is the language of choice for big data analysis and machine learning. Many students choose Python to start learning to code because of its emphasis on readability as outlined by the zen of Python. Beautiful is better than ugly, while explicit is better than implicit. Python is very simple, but avoids the temptation to sprinkle in magic that causes ambiguity. Its code is often organized into notebooks, where individual cells can be executed, then documented in the same place. We're currently at version 3 of the language, and you can get started by creating a file that ends in .py, or .ipymb to create an interactive notebook. Create a variable by setting a name equal to a value. It's strongly typed, which means values won't change in unexpected ways, but dynamic, so type annotations are not required. The syntax is highly efficient, allowing you to declare multiple variables on a single line, and define two pulls, lists, and dictionaries with a literal syntax. Demicolins are not required, and if you use them, and experience Pythonista, will say that your code is not Pythonic. Instead of semicolons, Python uses indentation to terminate or determine the scope of a line of code. Define a function with a def keyword, then indent the next line, usually by four spaces, to define the function body. We might then add a for loop to it, and indent that by another four spaces. This eliminates the need for curly braces and semicolons found in many other languages. Python is a multi-paradigm language. We can apply functional programming patterns with things like anonymous functions using Lambda. It also uses objects as an abstraction for data, allowing you to implement object-oriented patterns, with things like classes and inheritance. It also has a huge ecosystem of third-party libraries, such as deep learning frameworks like TensorFlow, and wrappers for many high-performance low-level packages like Open Computer Vision, which are most often installed with the PIP package manager. This has been the Python programming language in 100 seconds. Hit the like button if you want to see more short videos like this. Thanks for watching, and I will see you in the next one.", "segments": [{"start": 0.0, "end": 5.36, "text": " Python, a high-level, interpreted programming language famous for its zen-like code."}, {"start": 5.36, "end": 9.44, "text": " It's arguably the most popular language in the world because it's easy to learn, yet"}, {"start": 9.44, "end": 11.6, "text": " practical for serious projects."}, {"start": 11.6, "end": 15.72, "text": " In fact, you're watching this YouTube video in a Python web application right now."}, {"start": 15.72, "end": 20.96, "text": " It was created by Kwiidovan Rossum and released in 1991, who named it after Monty Python's"}, {"start": 20.96, "end": 25.36, "text": " blind circus, which is why you'll sometimes find spam and eggs instead of food and bar"}, {"start": 25.36, "end": 26.52, "text": " in code samples."}, {"start": 26.52, "end": 31.04, "text": " It's commonly used to build server-side applications, like web apps with the Django framework, and"}, {"start": 31.04, "end": 34.76, "text": " is the language of choice for big data analysis and machine learning."}, {"start": 34.76, "end": 39.16, "text": " Many students choose Python to start learning to code because of its emphasis on readability"}, {"start": 39.16, "end": 41.36, "text": " as outlined by the zen of Python."}, {"start": 41.36, "end": 45.120000000000005, "text": " Beautiful is better than ugly, while explicit is better than implicit."}, {"start": 45.120000000000005, "end": 50.2, "text": " Python is very simple, but avoids the temptation to sprinkle in magic that causes ambiguity."}, {"start": 50.2, "end": 54.68, "text": " Its code is often organized into notebooks, where individual cells can be executed, then"}, {"start": 54.68, "end": 56.56, "text": " documented in the same place."}, {"start": 56.56, "end": 60.24, "text": " We're currently at version 3 of the language, and you can get started by creating a file"}, {"start": 60.24, "end": 65.0, "text": " that ends in .py, or .ipymb to create an interactive notebook."}, {"start": 65.0, "end": 67.96000000000001, "text": " Create a variable by setting a name equal to a value."}, {"start": 67.96000000000001, "end": 72.16, "text": " It's strongly typed, which means values won't change in unexpected ways, but dynamic,"}, {"start": 72.16, "end": 73.96000000000001, "text": " so type annotations are not required."}, {"start": 73.96000000000001, "end": 77.84, "text": " The syntax is highly efficient, allowing you to declare multiple variables on a single"}, {"start": 77.84, "end": 82.24000000000001, "text": " line, and define two pulls, lists, and dictionaries with a literal syntax."}, {"start": 82.24, "end": 86.28, "text": " Demicolins are not required, and if you use them, and experience Pythonista, will say"}, {"start": 86.28, "end": 88.03999999999999, "text": " that your code is not Pythonic."}, {"start": 88.03999999999999, "end": 93.11999999999999, "text": " Instead of semicolons, Python uses indentation to terminate or determine the scope of a line"}, {"start": 93.11999999999999, "end": 94.11999999999999, "text": " of code."}, {"start": 94.11999999999999, "end": 98.39999999999999, "text": " Define a function with a def keyword, then indent the next line, usually by four spaces,"}, {"start": 98.39999999999999, "end": 99.75999999999999, "text": " to define the function body."}, {"start": 99.75999999999999, "end": 103.6, "text": " We might then add a for loop to it, and indent that by another four spaces."}, {"start": 103.6, "end": 107.88, "text": " This eliminates the need for curly braces and semicolons found in many other languages."}, {"start": 107.88, "end": 109.84, "text": " Python is a multi-paradigm language."}, {"start": 109.84, "end": 113.44, "text": " We can apply functional programming patterns with things like anonymous functions using"}, {"start": 113.44, "end": 114.44, "text": " Lambda."}, {"start": 114.44, "end": 118.72, "text": " It also uses objects as an abstraction for data, allowing you to implement object-oriented"}, {"start": 118.72, "end": 121.44, "text": " patterns, with things like classes and inheritance."}, {"start": 121.44, "end": 125.96000000000001, "text": " It also has a huge ecosystem of third-party libraries, such as deep learning frameworks"}, {"start": 125.96000000000001, "end": 131.4, "text": " like TensorFlow, and wrappers for many high-performance low-level packages like Open Computer Vision, which"}, {"start": 131.4, "end": 134.48000000000002, "text": " are most often installed with the PIP package manager."}, {"start": 134.48000000000002, "end": 137.44, "text": " This has been the Python programming language in 100 seconds."}, {"start": 137.44, "end": 139.84, "text": " Hit the like button if you want to see more short videos like this."}, {"start": 139.84, "end": 142.48, "text": " Thanks for watching, and I will see you in the next one."}]}, {"title": "Java in 100 Seconds", "url": "https://www.youtube.com/watch?v=l9AzO1FMgM8", "transcript": " Java, a high-level multi-paradigm programming language famous for its ability to compile to platform independent bytecode. It was designed by James Gosling in 1990 at Sun Microsystems. One of its first demonstrations was the star 7 pda, which gave birth to the Java mascot Duke. Today, it's one of the world's most popular programming languages. It powers enterprise web apps with spring framework, big data pipelines with Hadoop, mobile apps on Android, and even things like the controller for NASA's Maestro Mars Rover. What made Java innovative is that instead of compiling to machine code like C or C++, it compiles to bytecode that can run on any operating system without recompiling, which is made possible by executing the code with the Java virtual machine or JVM. It's both a compiled and interpreted language at the same time. The computer just needs to have the Java runtime environment or JRE installed. And most of them do. For developers, this means right once, run anywhere. It's a strongly typed language with a curly brace syntax similar to the C family. However, it provides more high-level features like garbage collection, runtime type checking, and reflection. To get started, install the Java development kit or JDK. Then create a file, ending in .java. Every Java program starts with a class name, which should also match the file name. The class is required to have a main method. This is where your code will start executing. Inside the method, define a variable by starting with a type, followed by a name and value. We can then print it to the standard output using the built-in system class. Now, because we're inside of a class, we define functions as methods on this class. The public keyword means that it can be used outside of this class. And static means that it's a member of the class itself as opposed to an instance of the class. We then provide a type and name and return a value from it. You can define your own custom classes, which are blueprints for objects, then add attributes and methods to them. Use the new keyword to instantiate an object from the class. It feels very object-oriented, but has evolved to support functional patterns like anonymous lambda methods. When your program is finished, use the compiler to generate a .class file, which contains the bytecode. Now use the Java command to tell the JVM to interpret and run that file. Congratulations! You just built an enterprise-grade application. This has been Java and 100 seconds. Hit subscribe for more short videos like this. And if we somehow get to 100,000 likes on this video, I'll do a full Java tutorial. Thanks for watching, and I will see you in the next one.", "segments": [{"start": 0.0, "end": 7.16, "text": " Java, a high-level multi-paradigm programming language famous for its ability to compile to platform independent bytecode."}, {"start": 7.16, "end": 12.120000000000001, "text": " It was designed by James Gosling in 1990 at Sun Microsystems. One of its first"}, {"start": 12.4, "end": 17.52, "text": " demonstrations was the star 7 pda, which gave birth to the Java mascot Duke. Today,"}, {"start": 17.52, "end": 24.04, "text": " it's one of the world's most popular programming languages. It powers enterprise web apps with spring framework, big data pipelines with Hadoop,"}, {"start": 24.04, "end": 29.16, "text": " mobile apps on Android, and even things like the controller for NASA's Maestro Mars Rover."}, {"start": 29.16, "end": 35.76, "text": " What made Java innovative is that instead of compiling to machine code like C or C++, it compiles to bytecode"}, {"start": 35.76, "end": 43.08, "text": " that can run on any operating system without recompiling, which is made possible by executing the code with the Java virtual machine or"}, {"start": 43.08, "end": 51.32, "text": " JVM. It's both a compiled and interpreted language at the same time. The computer just needs to have the Java runtime environment or JRE installed."}, {"start": 51.32, "end": 55.24, "text": " And most of them do. For developers, this means right once, run anywhere."}, {"start": 55.24, "end": 59.68, "text": " It's a strongly typed language with a curly brace syntax similar to the C family."}, {"start": 59.68, "end": 65.68, "text": " However, it provides more high-level features like garbage collection, runtime type checking, and reflection."}, {"start": 65.68, "end": 69.16, "text": " To get started, install the Java development kit or JDK."}, {"start": 69.16, "end": 75.6, "text": " Then create a file, ending in .java. Every Java program starts with a class name, which should also match the file name."}, {"start": 75.6, "end": 80.16, "text": " The class is required to have a main method. This is where your code will start executing."}, {"start": 80.39999999999999, "end": 85.44, "text": " Inside the method, define a variable by starting with a type, followed by a name and value."}, {"start": 85.44, "end": 89.24, "text": " We can then print it to the standard output using the built-in system class."}, {"start": 89.24, "end": 93.56, "text": " Now, because we're inside of a class, we define functions as methods on this class."}, {"start": 93.56, "end": 96.67999999999999, "text": " The public keyword means that it can be used outside of this class."}, {"start": 96.67999999999999, "end": 101.56, "text": " And static means that it's a member of the class itself as opposed to an instance of the class."}, {"start": 101.56, "end": 104.92, "text": " We then provide a type and name and return a value from it."}, {"start": 104.92, "end": 110.72, "text": " You can define your own custom classes, which are blueprints for objects, then add attributes and methods to them."}, {"start": 110.72, "end": 113.84, "text": " Use the new keyword to instantiate an object from the class."}, {"start": 113.84, "end": 119.48, "text": " It feels very object-oriented, but has evolved to support functional patterns like anonymous lambda methods."}, {"start": 119.48, "end": 125.04, "text": " When your program is finished, use the compiler to generate a .class file, which contains the bytecode."}, {"start": 125.04, "end": 129.36, "text": " Now use the Java command to tell the JVM to interpret and run that file."}, {"start": 129.36, "end": 132.68, "text": " Congratulations! You just built an enterprise-grade application."}, {"start": 132.68, "end": 134.8, "text": " This has been Java and 100 seconds."}, {"start": 134.8, "end": 136.96, "text": " Hit subscribe for more short videos like this."}, {"start": 136.96, "end": 141.48000000000002, "text": " And if we somehow get to 100,000 likes on this video, I'll do a full Java tutorial."}, {"start": 141.48000000000002, "end": 144.12, "text": " Thanks for watching, and I will see you in the next one."}]}, {"title": "C++ in 100 Seconds", "url": "https://www.youtube.com/watch?v=MNeX4EGtR5Y", "transcript": " C++, a statically typed compiled programming language, famous for its widespread use in software infrastructure, and infamous for its steep learning curve. It was created in 1979 by Bjorn Stroustrup at AT&T Bell Labs. He was inspired by the object-oriented nature of Simula, but needed a language with a high performance of C, and thus, C with classes was born. It's designed as a superset of C, which means that virtually any C program is also a valid C++ program. It also adds zero overhead abstractions, such as object-oriented patterns like polymorphism, encapsulation, and inheritance. Today, it's used in a wide variety of systems with constrained memory demands. Like the Unreal Engine for AAA video games, programs like Adobe After Effects that were used to edit this video, databases like MySQL and MongoDB, embedded systems like the display on your smart toaster, and is used to implement much of our low-level infrastructure, like language compilers and virtual machines. It's so popular because it provides low-level memory and hardware control like C, but with high-level abstractions like classes and smart pointers. C++ makes it harder to shoot yourself in the foot, but when you do, it'll blow your whole leg off. To get started, install a C++ compiler like GCC or Cling, then create a file ending in CPP, include IOStream from the standard library to handle input and output. Your code will start executing from the main function. To print Hello World, we simply use standard character output followed by the bitwise shift left off rate and a string literal. We can get rid of this STD though by adding a namespace to the top of the file. Now if we want to create a string variable, we can do so by typing it as an array of characters. However, if we include string from the standard library, we can use the string type instead. The real game changer though is the fact that C++ supports object-oriented programming with classes. 8. Class is just a blueprint for an object. Inside a class, you can define attributes and methods that will be private by default, or make them public by adding them under the public specifier. It's also possible to define methods outside the class definition using a double colon. Methods can also be defined multiple times with different parameters, which is known as overloading and is a form of polymorphism. In addition, we can define constructors and destructors to run code when an object is created or destroyed. Classes also support inheritance, allowing developers to more efficiently share logic throughout a program. To instantiate an object, type the class name, followed by the name of your object, and optional any parameters for the constructor. When it comes to memory, we could manage everything manually with pointers and references. However, tools like UniquePointer can get the job done in a way that's easier and safer, by ensuring that only one object can be allocated to memory. Now to run your code, open up the terminal and use a tool like Clang++ to compile it. This has been C++ in 100 seconds. Hit the like button and subscribe if you want to see more short videos like this. Thanks for watching, and I will see you in the next one.", "segments": [{"start": 0.0, "end": 5.44, "text": " C++, a statically typed compiled programming language, famous for its widespread use"}, {"start": 5.44, "end": 8.84, "text": " in software infrastructure, and infamous for its steep learning curve."}, {"start": 8.84, "end": 13.48, "text": " It was created in 1979 by Bjorn Stroustrup at AT&T Bell Labs."}, {"start": 13.48, "end": 17.72, "text": " He was inspired by the object-oriented nature of Simula, but needed a language with a high"}, {"start": 17.72, "end": 20.92, "text": " performance of C, and thus, C with classes was born."}, {"start": 20.92, "end": 25.76, "text": " It's designed as a superset of C, which means that virtually any C program is also a valid"}, {"start": 25.76, "end": 27.2, "text": " C++ program."}, {"start": 27.2, "end": 32.519999999999996, "text": " It also adds zero overhead abstractions, such as object-oriented patterns like polymorphism,"}, {"start": 32.519999999999996, "end": 34.28, "text": " encapsulation, and inheritance."}, {"start": 34.28, "end": 38.12, "text": " Today, it's used in a wide variety of systems with constrained memory demands."}, {"start": 38.12, "end": 42.16, "text": " Like the Unreal Engine for AAA video games, programs like Adobe After Effects that were"}, {"start": 42.16, "end": 47.519999999999996, "text": " used to edit this video, databases like MySQL and MongoDB, embedded systems like the display"}, {"start": 47.519999999999996, "end": 51.760000000000005, "text": " on your smart toaster, and is used to implement much of our low-level infrastructure, like language"}, {"start": 51.760000000000005, "end": 53.64, "text": " compilers and virtual machines."}, {"start": 53.64, "end": 57.72, "text": " It's so popular because it provides low-level memory and hardware control like C, but with"}, {"start": 57.72, "end": 60.88, "text": " high-level abstractions like classes and smart pointers."}, {"start": 60.88, "end": 64.48, "text": " C++ makes it harder to shoot yourself in the foot, but when you do, it'll blow your"}, {"start": 64.48, "end": 66.48, "text": " whole leg off."}, {"start": 66.48, "end": 71.8, "text": " To get started, install a C++ compiler like GCC or Cling, then create a file ending in"}, {"start": 71.8, "end": 76.2, "text": " CPP, include IOStream from the standard library to handle input and output."}, {"start": 76.2, "end": 78.52, "text": " Your code will start executing from the main function."}, {"start": 78.52, "end": 82.68, "text": " To print Hello World, we simply use standard character output followed by the bitwise shift"}, {"start": 82.68, "end": 84.72000000000001, "text": " left off rate and a string literal."}, {"start": 84.72000000000001, "end": 88.48, "text": " We can get rid of this STD though by adding a namespace to the top of the file."}, {"start": 88.48, "end": 93.16000000000001, "text": " Now if we want to create a string variable, we can do so by typing it as an array of characters."}, {"start": 93.16000000000001, "end": 97.64000000000001, "text": " However, if we include string from the standard library, we can use the string type instead."}, {"start": 97.64000000000001, "end": 101.96000000000001, "text": " The real game changer though is the fact that C++ supports object-oriented programming with"}, {"start": 101.96000000000001, "end": 102.96000000000001, "text": " classes."}, {"start": 102.96000000000001, "end": 103.96000000000001, "text": " 8."}, {"start": 103.96000000000001, "end": 105.12, "text": " Class is just a blueprint for an object."}, {"start": 105.12, "end": 109.24000000000001, "text": " Inside a class, you can define attributes and methods that will be private by default,"}, {"start": 109.24000000000001, "end": 112.36000000000001, "text": " or make them public by adding them under the public specifier."}, {"start": 112.36, "end": 117.03999999999999, "text": " It's also possible to define methods outside the class definition using a double colon."}, {"start": 117.03999999999999, "end": 120.44, "text": " Methods can also be defined multiple times with different parameters, which is known as"}, {"start": 120.44, "end": 122.88, "text": " overloading and is a form of polymorphism."}, {"start": 122.88, "end": 127.16, "text": " In addition, we can define constructors and destructors to run code when an object is"}, {"start": 127.16, "end": 128.56, "text": " created or destroyed."}, {"start": 128.56, "end": 132.64, "text": " Classes also support inheritance, allowing developers to more efficiently share logic throughout"}, {"start": 132.64, "end": 133.64, "text": " a program."}, {"start": 133.64, "end": 137.2, "text": " To instantiate an object, type the class name, followed by the name of your object, and"}, {"start": 137.2, "end": 139.44, "text": " optional any parameters for the constructor."}, {"start": 139.44, "end": 143.68, "text": " When it comes to memory, we could manage everything manually with pointers and references."}, {"start": 143.68, "end": 148.16, "text": " However, tools like UniquePointer can get the job done in a way that's easier and safer,"}, {"start": 148.16, "end": 151.16, "text": " by ensuring that only one object can be allocated to memory."}, {"start": 151.16, "end": 156.84, "text": " Now to run your code, open up the terminal and use a tool like Clang++ to compile it."}, {"start": 156.84, "end": 159.16, "text": " This has been C++ in 100 seconds."}, {"start": 159.16, "end": 162.04, "text": " Hit the like button and subscribe if you want to see more short videos like this."}, {"start": 162.04, "end": 164.48, "text": " Thanks for watching, and I will see you in the next one."}]}, {"title": "SQL Explained in 100 Seconds", "url": "https://www.youtube.com/watch?v=zsjvFFKOm3c", "transcript": " Structured Query Language, SQL or SQL for short, is the gold standard language for communicating with relational database management systems. You've likely heard of databases like MySQL, Postgres, Microsoft SQL Server, and Oracle, all of which are based on SQL with their own little variations. It was initially developed in the early 70s to mutate and retrieve data from IBM's system R database. By 1986, it was standardized into the syntax that remains extremely popular in technical applications today. A relational database organizes data into tables, kind of like an Excel spreadsheet, where columns contain attributes or types of data, while each row represents an individual record or data point with its own unique ID known as a primary key. We can establish relationships between data points by taking the unique ID from one row and storing it on a different row in a different table in a special column known as a foreign key. In the team's table, the team ID is the primary key, but in the players table, it's the foreign key. And what that data structure tells us is that a player belongs to one team while a team can have many players. What we've done here is structured our data in its smallest normal form to eliminate duplication and redundancy. Now the role of SQL is not only to recreate, update, and delete data, but also to join data together based on the relationships embedded within it. The syntax is comprised of several key parts. If we zoom all the way out, we have a statement, or a piece of code that does something, like reads or writes to the database. Within a statement, we have a variety of keywords that can manipulate the database. Select can be used to make a query for the columns that you want from a table. The column and table names are known as identifiers, but we may not want every row in the table. So we filter the results with the where keyword to only include records that meet a certain condition. It's like looping over every row in the table and only returning rows in the query where the predicate evaluates to true. Then we might use the join keyword to connect data from an entirely different table, by matching the primary key on this table to the foreign key on another table. What we've created is a collection of clauses that make up a full SQL statement. We can now go and execute this code on the hundreds of different databases that support SQL. This has been structured query language in 100 seconds. Like and subscribe if you want to see a full SQL tutorial. Thanks for watching, and I will see you in the next one.", "segments": [{"start": 0.0, "end": 6.32, "text": " Structured Query Language, SQL or SQL for short, is the gold standard language for communicating"}, {"start": 6.32, "end": 8.8, "text": " with relational database management systems."}, {"start": 8.8, "end": 14.48, "text": " You've likely heard of databases like MySQL, Postgres, Microsoft SQL Server, and Oracle,"}, {"start": 14.48, "end": 17.64, "text": " all of which are based on SQL with their own little variations."}, {"start": 17.64, "end": 22.44, "text": " It was initially developed in the early 70s to mutate and retrieve data from IBM's"}, {"start": 22.44, "end": 23.84, "text": " system R database."}, {"start": 23.84, "end": 29.04, "text": " By 1986, it was standardized into the syntax that remains extremely popular in technical"}, {"start": 29.04, "end": 30.16, "text": " applications today."}, {"start": 30.16, "end": 35.08, "text": " A relational database organizes data into tables, kind of like an Excel spreadsheet, where"}, {"start": 35.08, "end": 40.0, "text": " columns contain attributes or types of data, while each row represents an individual record"}, {"start": 40.0, "end": 43.76, "text": " or data point with its own unique ID known as a primary key."}, {"start": 43.76, "end": 48.36, "text": " We can establish relationships between data points by taking the unique ID from one row"}, {"start": 48.36, "end": 53.239999999999995, "text": " and storing it on a different row in a different table in a special column known as a foreign"}, {"start": 53.239999999999995, "end": 54.239999999999995, "text": " key."}, {"start": 54.239999999999995, "end": 58.28, "text": " In the team's table, the team ID is the primary key, but in the players table, it's the"}, {"start": 58.28, "end": 59.28, "text": " foreign key."}, {"start": 59.28, "end": 64.12, "text": " And what that data structure tells us is that a player belongs to one team while a team"}, {"start": 64.12, "end": 65.6, "text": " can have many players."}, {"start": 65.6, "end": 70.48, "text": " What we've done here is structured our data in its smallest normal form to eliminate duplication"}, {"start": 70.48, "end": 71.84, "text": " and redundancy."}, {"start": 71.84, "end": 77.86, "text": " Now the role of SQL is not only to recreate, update, and delete data, but also to join"}, {"start": 77.86, "end": 81.24000000000001, "text": " data together based on the relationships embedded within it."}, {"start": 81.24000000000001, "end": 84.24000000000001, "text": " The syntax is comprised of several key parts."}, {"start": 84.24, "end": 88.86, "text": " If we zoom all the way out, we have a statement, or a piece of code that does something, like"}, {"start": 88.86, "end": 90.8, "text": " reads or writes to the database."}, {"start": 90.8, "end": 95.0, "text": " Within a statement, we have a variety of keywords that can manipulate the database."}, {"start": 95.0, "end": 99.8, "text": " Select can be used to make a query for the columns that you want from a table."}, {"start": 99.8, "end": 105.03999999999999, "text": " The column and table names are known as identifiers, but we may not want every row in the table."}, {"start": 105.03999999999999, "end": 109.03999999999999, "text": " So we filter the results with the where keyword to only include records that meet a certain"}, {"start": 109.03999999999999, "end": 110.03999999999999, "text": " condition."}, {"start": 110.03999999999999, "end": 113.36, "text": " It's like looping over every row in the table and only returning rows in the query where"}, {"start": 113.36, "end": 115.28, "text": " the predicate evaluates to true."}, {"start": 115.28, "end": 120.12, "text": " Then we might use the join keyword to connect data from an entirely different table, by matching"}, {"start": 120.12, "end": 123.96, "text": " the primary key on this table to the foreign key on another table."}, {"start": 123.96, "end": 128.84, "text": " What we've created is a collection of clauses that make up a full SQL statement."}, {"start": 128.84, "end": 132.6, "text": " We can now go and execute this code on the hundreds of different databases that support"}, {"start": 132.6, "end": 133.6, "text": " SQL."}, {"start": 133.6, "end": 136.36, "text": " This has been structured query language in 100 seconds."}, {"start": 136.36, "end": 139.28, "text": " Like and subscribe if you want to see a full SQL tutorial."}, {"start": 139.28, "end": 141.76, "text": " Thanks for watching, and I will see you in the next one."}]}, {"title": "Svelte in 100 Seconds", "url": "https://www.youtube.com/watch?v=rv3Yq-B8qp4", "transcript": " Svelte, it's a JavaScript tool for building UI components, just like React, Angular, or View. But unlike its peers, which ship a JavaScript runtime to the browser to make your code work, Svelte is a compiler. It converts the declarative code that you'd love to write as a developer into imperative code that works with native browser APIs. As a result, you get highly performant code in a very small package. But most importantly, it's the only JavaScript framework that's actually enjoyable to use. Wow, wow, wow, wow, it's a very nice! We create components in .Svelte files, which contain three main parts. A script for your JavaScript code, which can also be TypeScript, a Style Tag for your CSS, which can also use a pre-processor like SAS, and the main template represented as regular HTML. But it's no ordinary HTML. It's been empowered with all kinds of extra syntax for writing declarative code. Need reactive state? Simply define a variable with the light keyword. Then reference it dynamically in the HTML using braces. If we want to change the state, we can do that by defining a function, then listen to an event in the DOM with on, and bind the function to it as the handler. Now, in the value of that variable changes, the component will automatically re-render to show the updated state. In many cases, you'll need to run conditional logic or loops in your template. Instead of fighting against JavaScript functions, it empowers you with a syntax, where you can clearly create an if-else statement, or a for-each loop, when working with a list. Now, when it comes to cross-component communication, Spelt provides multiple different strategies for sharing data between components. To pass data from a parent to child, you can use props by adding the export keyword to a variable. And now you can pass data into this component. And if you have a ton of props, you can use the spread syntax to keep your code looking fit and healthy. Now, for more complex component trees, you have a context API just like React. And if that wasn't enough, Spelt also has a really nice mechanism called Stores, which are like observables that can be shared anywhere in the component tree, and subscribed to in the template by putting a dollar sign in front of them. After you've built an awesome UI, you can then use the compiler to convert it to vanilla JavaScript. And if you're building a full-blown web application, you can use SpeltKit to quickly implement server-side rendering, routing, and code splitting. This has been Spelt in 100 seconds. Hit the like button if you want to see more. Thanks for watching, and I will see you in the next one.", "segments": [{"start": 0.0, "end": 5.36, "text": " Svelte, it's a JavaScript tool for building UI components, just like React, Angular, or View."}, {"start": 5.36, "end": 11.24, "text": " But unlike its peers, which ship a JavaScript runtime to the browser to make your code work, Svelte is a compiler."}, {"start": 11.24, "end": 17.64, "text": " It converts the declarative code that you'd love to write as a developer into imperative code that works with native browser APIs."}, {"start": 17.64, "end": 21.2, "text": " As a result, you get highly performant code in a very small package."}, {"start": 21.2, "end": 25.16, "text": " But most importantly, it's the only JavaScript framework that's actually enjoyable to use."}, {"start": 25.76, "end": 27.6, "text": " Wow, wow, wow, wow, it's a very nice!"}, {"start": 27.6, "end": 31.6, "text": " We create components in .Svelte files, which contain three main parts."}, {"start": 31.6, "end": 36.8, "text": " A script for your JavaScript code, which can also be TypeScript, a Style Tag for your CSS,"}, {"start": 36.8, "end": 42.08, "text": " which can also use a pre-processor like SAS, and the main template represented as regular HTML."}, {"start": 42.08, "end": 43.92, "text": " But it's no ordinary HTML."}, {"start": 43.92, "end": 47.72, "text": " It's been empowered with all kinds of extra syntax for writing declarative code."}, {"start": 47.72, "end": 51.32, "text": " Need reactive state? Simply define a variable with the light keyword."}, {"start": 51.32, "end": 54.6, "text": " Then reference it dynamically in the HTML using braces."}, {"start": 54.64, "end": 57.64, "text": " If we want to change the state, we can do that by defining a function,"}, {"start": 57.64, "end": 62.160000000000004, "text": " then listen to an event in the DOM with on, and bind the function to it as the handler."}, {"start": 62.160000000000004, "end": 67.88, "text": " Now, in the value of that variable changes, the component will automatically re-render to show the updated state."}, {"start": 67.88, "end": 71.52000000000001, "text": " In many cases, you'll need to run conditional logic or loops in your template."}, {"start": 71.52000000000001, "end": 75.16, "text": " Instead of fighting against JavaScript functions, it empowers you with a syntax,"}, {"start": 75.16, "end": 79.76, "text": " where you can clearly create an if-else statement, or a for-each loop, when working with a list."}, {"start": 79.76, "end": 82.12, "text": " Now, when it comes to cross-component communication,"}, {"start": 82.12, "end": 85.96000000000001, "text": " Spelt provides multiple different strategies for sharing data between components."}, {"start": 85.96000000000001, "end": 91.2, "text": " To pass data from a parent to child, you can use props by adding the export keyword to a variable."}, {"start": 91.2, "end": 93.24000000000001, "text": " And now you can pass data into this component."}, {"start": 93.24000000000001, "end": 97.96000000000001, "text": " And if you have a ton of props, you can use the spread syntax to keep your code looking fit and healthy."}, {"start": 97.96000000000001, "end": 102.16, "text": " Now, for more complex component trees, you have a context API just like React."}, {"start": 102.16, "end": 106.28, "text": " And if that wasn't enough, Spelt also has a really nice mechanism called Stores,"}, {"start": 106.28, "end": 109.52000000000001, "text": " which are like observables that can be shared anywhere in the component tree,"}, {"start": 109.52, "end": 112.84, "text": " and subscribed to in the template by putting a dollar sign in front of them."}, {"start": 112.84, "end": 117.75999999999999, "text": " After you've built an awesome UI, you can then use the compiler to convert it to vanilla JavaScript."}, {"start": 117.75999999999999, "end": 122.0, "text": " And if you're building a full-blown web application, you can use SpeltKit to quickly implement"}, {"start": 122.0, "end": 124.6, "text": " server-side rendering, routing, and code splitting."}, {"start": 124.6, "end": 126.67999999999999, "text": " This has been Spelt in 100 seconds."}, {"start": 126.67999999999999, "end": 128.35999999999999, "text": " Hit the like button if you want to see more."}, {"start": 128.35999999999999, "end": 131.16, "text": " Thanks for watching, and I will see you in the next one."}]}, {"title": "MongoDB in 100 Seconds", "url": "https://www.youtube.com/watch?v=-bt_y4Loofg", "transcript": " MongoDB is the world's most advanced and popular document-oriented database. It was created in 2007. After the team at DoubleClick, a company serving 400,000 ads per second, faced issues with scalability and flexibility using existing database systems. This inspired them to design a database where all data is stored in JSON-like documents, which are organized into collections where they can be queried. Unlike a relational table, a predefined schema for a collection is optional, which allows you to evolve your data structures rapidly without running complex database migrations. But more importantly, it allows data that's frequently accessed together by an app to be stored in the same place. This makes read operations extremely fast because no joins are required. It's like having a fully assembled car ready to go, as opposed to joining together a bunch of separate parts. And that also makes the database much easier to scale horizontally via sharding. Unlike relational tables, collections are self-contained, making them much easier to work with in a distributed system. That's why they call it Mongo. It's designed for humongous workloads. When you create a new document in MongoDB, it's assigned an object ID that's unique to that collection. Inside the document, you can define multiple fields, where the value might be a variety of different data types, like a string, array, object, and so on. Now to work with your data in any programming language, the query API is used to perform basic read and write operations, as well as complex queries and transformations across the database. To optimize performance, secondary indexes can be created to make common queries extremely fast. It also supports geospatial queries to find all the documents near a geographic location. In addition to queries, you can also create data aggregation pipelines, which can group documents together and reduce them to a single result. MongoDB is free to use and can be self-hosted, but the quickest way to get started is with the free tier on Atlas. It scales automatically and provides a UI where you can interact with your data, plus a ton of other awesome features like full-text search that leverages the power of Apache Lucine. In addition, they just launch a serverless option, where you only pay for the exact resources that you use, and Atlas has other essential features like triggers that make it easy to run serverless functions when your underlying data changes. Then there's Realm, which is a Firebase-like platform, that makes it easy to sync up your data with a front-end application in real time. This has been MongoDB in 100 seconds. Let me know if you want to see a full tutorial in the comments. Thanks for watching, and I will see you in the next one.", "segments": [{"start": 0.0, "end": 5.0, "text": " MongoDB is the world's most advanced and popular document-oriented database."}, {"start": 5.0, "end": 6.76, "text": " It was created in 2007."}, {"start": 6.76, "end": 10.84, "text": " After the team at DoubleClick, a company serving 400,000 ads per second,"}, {"start": 10.84, "end": 15.44, "text": " faced issues with scalability and flexibility using existing database systems."}, {"start": 15.44, "end": 20.44, "text": " This inspired them to design a database where all data is stored in JSON-like documents,"}, {"start": 20.44, "end": 23.36, "text": " which are organized into collections where they can be queried."}, {"start": 23.36, "end": 27.52, "text": " Unlike a relational table, a predefined schema for a collection is optional,"}, {"start": 27.52, "end": 32.6, "text": " which allows you to evolve your data structures rapidly without running complex database migrations."}, {"start": 32.6, "end": 38.0, "text": " But more importantly, it allows data that's frequently accessed together by an app to be stored in the same place."}, {"start": 38.0, "end": 41.879999999999995, "text": " This makes read operations extremely fast because no joins are required."}, {"start": 41.879999999999995, "end": 44.480000000000004, "text": " It's like having a fully assembled car ready to go,"}, {"start": 44.480000000000004, "end": 47.480000000000004, "text": " as opposed to joining together a bunch of separate parts."}, {"start": 47.480000000000004, "end": 51.92, "text": " And that also makes the database much easier to scale horizontally via sharding."}, {"start": 51.92, "end": 54.92, "text": " Unlike relational tables, collections are self-contained,"}, {"start": 54.92, "end": 57.88, "text": " making them much easier to work with in a distributed system."}, {"start": 57.88, "end": 59.28, "text": " That's why they call it Mongo."}, {"start": 59.28, "end": 61.6, "text": " It's designed for humongous workloads."}, {"start": 61.6, "end": 63.800000000000004, "text": " When you create a new document in MongoDB,"}, {"start": 63.800000000000004, "end": 67.12, "text": " it's assigned an object ID that's unique to that collection."}, {"start": 67.12, "end": 69.92, "text": " Inside the document, you can define multiple fields,"}, {"start": 69.92, "end": 72.72, "text": " where the value might be a variety of different data types,"}, {"start": 72.72, "end": 75.72, "text": " like a string, array, object, and so on."}, {"start": 75.72, "end": 78.2, "text": " Now to work with your data in any programming language,"}, {"start": 78.2, "end": 81.92, "text": " the query API is used to perform basic read and write operations,"}, {"start": 81.92, "end": 85.48, "text": " as well as complex queries and transformations across the database."}, {"start": 85.48, "end": 88.72, "text": " To optimize performance, secondary indexes can be created"}, {"start": 88.72, "end": 90.84, "text": " to make common queries extremely fast."}, {"start": 90.84, "end": 95.88, "text": " It also supports geospatial queries to find all the documents near a geographic location."}, {"start": 95.88, "end": 99.6, "text": " In addition to queries, you can also create data aggregation pipelines,"}, {"start": 99.6, "end": 103.2, "text": " which can group documents together and reduce them to a single result."}, {"start": 103.2, "end": 106.12, "text": " MongoDB is free to use and can be self-hosted,"}, {"start": 106.12, "end": 109.36, "text": " but the quickest way to get started is with the free tier on Atlas."}, {"start": 109.36, "end": 113.64, "text": " It scales automatically and provides a UI where you can interact with your data,"}, {"start": 113.64, "end": 116.48, "text": " plus a ton of other awesome features like full-text search"}, {"start": 116.48, "end": 119.0, "text": " that leverages the power of Apache Lucine."}, {"start": 119.0, "end": 121.76, "text": " In addition, they just launch a serverless option,"}, {"start": 121.76, "end": 124.56, "text": " where you only pay for the exact resources that you use,"}, {"start": 124.56, "end": 127.36, "text": " and Atlas has other essential features like triggers"}, {"start": 127.36, "end": 131.4, "text": " that make it easy to run serverless functions when your underlying data changes."}, {"start": 131.4, "end": 134.0, "text": " Then there's Realm, which is a Firebase-like platform,"}, {"start": 134.0, "end": 138.0, "text": " that makes it easy to sync up your data with a front-end application in real time."}, {"start": 138.0, "end": 140.68, "text": " This has been MongoDB in 100 seconds."}, {"start": 140.68, "end": 143.28, "text": " Let me know if you want to see a full tutorial in the comments."}, {"start": 143.28, "end": 146.04, "text": " Thanks for watching, and I will see you in the next one."}]}]}